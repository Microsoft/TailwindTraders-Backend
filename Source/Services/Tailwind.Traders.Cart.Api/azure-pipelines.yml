variables:
  
  # Azure
  azureSubscription: nepeters-azure

  # Azure Kubernetes Service production
  containerRegistryName: ttacrtfueoquph3mtw
  containerRegistryFqdn: ttacrtfueoquph3mtw.azurecr.io
  aks-cluster: tailwindtradersakstfueoquph3mtw
  aks-cluster-rg: twt-aks-cluster
  ingress: a8743d8c24e94be0b078.eastus2.aksapp.io

  # Azure Kubernetes Service pre-production
  containerRegistryName-pre-prod: ttacrbfhhvynll7sie
  containerRegistryFqdn-pre-prod: ttacrbfhhvynll7sie.azurecr.io
  aks-cluster-pre-prod: tailwindtradersaksbfhhvynll7sie
  aks-cluster-rg-pre-prod: twt-aks-cluster-pre-production
  ingress-pre-prod: 8b0d337f2ff1469b97be.eastus2.aksapp.io

stages:

- stage: build
  jobs:
  - job: build

    pool:
      name: Hosted Ubuntu 1604

    steps:

    - task: AzureCLI@1
      displayName: 'AZ ACR Login'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptLocation: inlineScript
        inlineScript: 'az acr login --name $(containerRegistryName)'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

    - task: HelmDeploy@0
      displayName: 'helm init --client-only'
      inputs:
        connectionType: None
        command: init
        arguments: '--client-only'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

    - task: HelmDeploy@0
      displayName: 'helm package (tt-cart)'
      inputs:
        command: package
        chartPath: 'Deploy/helm/cart-api'
        arguments: '--version $(Build.BuildId)'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

    - task: AzureCLI@1
      displayName: 'AZ ACR helm push (tt-cart)'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptLocation: inlineScript
        inlineScript: 'az acr helm push -n $(containerRegistryName) /home/vsts/work/1/a/cart-api-$(Build.BuildId).tgz'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

    - task: CmdLine@2
      displayName: 'docker build (tt-cart)'
      inputs:
        script: |
          cd Source/Services/Tailwind.Traders.Cart.Api
          docker build -t $(containerRegistryFqdn)/cart.api:$(Build.BuildId) .
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

    - task: CmdLine@2
      displayName: 'docker push (tt-web)'
      inputs:
        script: |
          docker push $(containerRegistryFqdn)/cart.api:$(Build.BuildId)
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '/home/vsts/work/1/s'
        artifactName: 'drop'

- stage: release_pre_production
  jobs:
  - deployment: release_pre_production
    displayName: release_pre_production
    pool:
      name: Hosted Ubuntu 1604
    environment: pre-production
    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            artifact: drop
            patterns: '**/*'

          - task: HelmDeploy@0
            displayName: 'helm init --client-only'
            inputs:
              connectionType: None
              command: init
              arguments: '--client-only'

          # - task: AzureCLI@1
          #   displayName: 'AZ ACR Login'
          #   inputs:
          #     azureSubscription: $(azureSubscription)
          #     scriptLocation: inlineScript
          #     inlineScript: 'az acr login --name $(containerRegistryName)'

          - task: AzureCLI@1
            inputs:
              azureSubscription: 'nepeters-azure'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az acr login --name $(containerRegistryName)
                az acr helm repo add --name $(containerRegistryName)
                az aks get-credentials --name $(aks-cluster-pre-prod) --resource-group $(aks-cluster-rg-pre-prod) --admin
                helm upgrade my-tt-cart $(containerRegistryName)/cart-api --install -f /home/vsts/work/1/drop/Deploy/helm/gvalues.yaml --set ingress.hosts={$(ingress-pre-prod)} --set image.repository=$(containerRegistryFqdn)/cart.api --set image.tag=$(Build.BuildId)

- stage: release_production
  jobs:
  - deployment: release_production
    displayName: release_production
    pool:
      name: Hosted Ubuntu 1604
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            artifact: drop
            patterns: '**/*'

          - task: HelmDeploy@0
            displayName: 'helm init --client-only'
            inputs:
              connectionType: None
              command: init
              arguments: '--client-only'

          # - task: AzureCLI@1
          #   displayName: 'AZ ACR Login'
          #   inputs:
          #     azureSubscription: $(azureSubscription)
          #     scriptLocation: inlineScript
          #     inlineScript: 'az acr login --name $(containerRegistryName)'

          - task: AzureCLI@1
            inputs:
              azureSubscription: 'nepeters-azure'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az acr login --name $(containerRegistryName)
                az acr helm repo add --name $(containerRegistryName)
                az aks get-credentials --name $(aks-cluster) --resource-group $(aks-cluster-rg) --admin
                helm upgrade my-tt-cart $(containerRegistryName)/cart-api --install -f /home/vsts/work/1/drop/Deploy/helm/gvalues.yaml --set ingress.hosts={$(ingress-pre-prod)} --set image.repository=$(containerRegistryFqdn)/cart.api --set image.tag=$(Build.BuildId)